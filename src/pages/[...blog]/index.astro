---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/PageLayout.astro';
import SinglePost from '~/components/blog/SinglePost.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';
import RelatedPosts from '~/components/blog/RelatedPosts.astro';
import Sidebar from '~/components/blog/Sidebar.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsBlogPost, blogPostRobots, findPostsByPermalink, fetchPosts } from '~/utils/blog';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';

// 使用混合渲染模式
export const prerender = false;

// 从URL中获取博客文章的permalink
const blogPath = Astro.params.blog;

if (!blogPath) {
  return Astro.redirect('/404', 404);
}

// 获取所有文章
const allPosts = await fetchPosts();

// 根据permalink查找文章
const posts = await findPostsByPermalink([blogPath]);
const post = posts[0];

// 如果文章不存在，返回404
if (!post) {
  return Astro.redirect('/404', 404);
}

// 如果是受保护的文章，检查用户是否已登录
if (post.protected) {
  const session = Astro.locals.session;
  if (!session) {
    const loginUrl = new URL('/login', Astro.url);
    loginUrl.searchParams.set('redirect', Astro.url.pathname);
    loginUrl.searchParams.set('reason', 'protected_post');
    loginUrl.searchParams.set('title', post.title);

    // 返回一个简单的客户端处理页面
    return new Response(`
      <!DOCTYPE html>
      <html>
        <head>
          <title>需要登录</title>
          <meta charset="utf-8">
          <style>
            body {
              font-family: system-ui, sans-serif;
              margin: 0;
              display: flex;
              justify-content: center;
              align-items: center;
              min-height: 100vh;
              background: #f4f4f5;
              text-align: center;
              line-height: 1.5;
            }
            .container {
              max-width: 90%;
              width: 400px;
              padding: 2rem;
              background: white;
              border-radius: 0.75rem;
              box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
            }
            h2 {
              margin-top: 0;
              color: #1f2937;
            }
            p {
              color: #4b5563;
              margin-bottom: 1.5rem;
            }
            .button {
              display: inline-block;
              padding: 0.75rem 1.5rem;
              background: #3b82f6;
              color: white;
              text-decoration: none;
              border-radius: 0.5rem;
              font-weight: 500;
              transition: background-color 0.2s;
            }
            .button:hover {
              background: #2563eb;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <h2>需要登录</h2>
            <p>《${post.title}》是一篇受保护的文章，登录后即可阅读！</p>
            <a href="#" onclick="openLoginWindow(); return false;" class="button">立即登录</a>
          </div>
          <script>
            function openLoginWindow() {
              const width = 600;
              const height = 700;
              const left = (window.screen.width / 2) - (width / 2);
              const top = (window.screen.height / 2) - (height / 2);
              
              const loginWindow = window.open(
                '${loginUrl.toString()}',
                'Login',
                'width=' + width + ',height=' + height + ',left=' + left + ',top=' + top + ',popup=1,toolbar=0'
              );

              if (!loginWindow) {
                window.location.href = '${loginUrl.toString()}';
                return;
              }

              // 监听登录窗口关闭事件
              const checkLoginInterval = setInterval(() => {
                if (loginWindow.closed) {
                  clearInterval(checkLoginInterval);
                  // 检查登录状态
                  fetch('/api/auth/status')
                    .then(response => {
                      if (response.ok) {
                        // 登录成功，刷新当前页面
                        window.location.reload();
                      }
                    });
                }
              }, 500);
            }

            // 自动打开登录窗口
            openLoginWindow();
          </script>
        </body>
      </html>
    `, {
      status: 200,
      headers: {
        'Content-Type': 'text/html; charset=utf-8'
      }
    });
  }
}

const url = getCanonical(getPermalink(post.permalink, 'post'));
const image = (await findImage(post.image)) as ImageMetadata | string | undefined;

const metadata = merge(
  {
    title: post.title,
    description: post.excerpt,
    robots: {
      index: post.draft ? false : true,
      follow: post.draft ? false : true,
    },
    openGraph: {
      type: 'article',
      ...(image ? { images: [{ url: image, width: 1200, height: 630 }] } : {}),
    },
  },
  { ...(post.metadata ? { ...post.metadata } : {}) },
) as MetaData;
---

<Layout metadata={metadata}>
  <section class="px-4 sm:px-6 py-8 sm:py-12 lg:py-16 mx-auto max-w-7xl">
    <div class="grid grid-cols-1 md:grid-cols-12 gap-4">
      <Sidebar />
      
      {/* 右侧内容区 */}
      <main class="md:col-span-9">
        <div class="bg-white dark:bg-slate-800 p-6 rounded-lg shadow-sm">
          <SinglePost post={post} url={url} />
          <ToBlogLink />
          {post.tags && <RelatedPosts tags={post.tags} post={post} />}
        </div>
      </main>
    </div>
  </section>
</Layout>
